version: 2.1

orbs:
  android: circleci/android@2.3.0

workflows:
  build-test-deploy:
    jobs:
      - build-and-test
      - lint
      - unit-tests:
          requires:
            - build-and-test
      - instrumented-tests:
          requires:
            - build-and-test

jobs:
  build-and-test:
    working_directory: ~/code
    docker:
      - image: cimg/android:2024.01.1
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"
      steps:
      - checkout
      - run:
          name: Make gradlew executable
          command: chmod +x ./gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}-{{ checksum "core/build.gradle.kts" }}-{{ checksum "favorite/build.gradle.kts" }}-{{ checksum "gradle/libs.versions.toml" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}-{{ checksum "core/build.gradle.kts" }}-{{ checksum "favorite/build.gradle.kts" }}-{{ checksum "gradle/libs.versions.toml" }}
      - run:
          name: Build Debug APK
          command: ./gradlew assembleDebug
      - run:
          name: Build Release APK
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/debug/
          destination: apk/debug
      - store_artifacts:
          path: app/build/outputs/apk/release/
          destination: apk/release
      - persist_to_workspace:
          root: ~/code
          paths:
            - .

  lint:
    working_directory: ~/code
    docker:
      - image: cimg/android:2024.01.1
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"
      steps:
      - attach_workspace:
          at: ~/code
      - run:
          name: Make gradlew executable
          command: chmod +x ./gradlew
      - run:
          name: Run Lint
          command: ./gradlew lintDebug
      - store_artifacts:
          path: app/build/reports/lint-results-debug.html
          destination: lint/app-lint-report.html
      - store_artifacts:
          path: core/build/reports/lint-results-debug.html
          destination: lint/core-lint-report.html
      - store_artifacts:
          path: favorite/build/reports/lint-results-debug.html
          destination: lint/favorite-lint-report.html

  unit-tests:
    working_directory: ~/code
    docker:
      - image: cimg/android:2024.01.1
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"
      steps:
      - attach_workspace:
          at: ~/code
      - run:
          name: Make gradlew executable
          command: chmod +x ./gradlew
      - run:
          name: Run Unit Tests
          command: ./gradlew testDebugUnitTest
      - run:
          name: Generate Test Reports
          command: ./gradlew jacocoTestReport
          when: always
      - store_test_results:
          path: app/build/test-results/testDebugUnitTest
      - store_test_results:
          path: core/build/test-results/testDebugUnitTest
      - store_test_results:
          path: favorite/build/test-results/testDebugUnitTest
      - store_artifacts:
          path: app/build/reports/tests/testDebugUnitTest
          destination: test-reports/app
      - store_artifacts:
          path: core/build/reports/tests/testDebugUnitTest
          destination: test-reports/core
      - store_artifacts:
          path: favorite/build/reports/tests/testDebugUnitTest
          destination: test-reports/favorite

  instrumented-tests:
    working_directory: ~/code
    docker:
      - image: cimg/android:2024.01.1
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"
      steps:
      - attach_workspace:
          at: ~/code
      - run:
          name: Make gradlew executable
          command: chmod +x ./gradlew
      - run:
          name: Setup emulator
          command: |
            sdkmanager "platform-tools" "platforms;android-34" "emulator"
            sdkmanager "system-images;android-34;google_apis;x86_64"
            echo "no" | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64"
      - run:
          name: Launch emulator
          command: |
            export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
            emulator64-x86 -avd test -no-window -noaudio -no-boot-anim -no-ui -accel auto -verbose
          background: true
      - run:
          name: Wait for emulator to start
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable animations
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Run instrumented tests
          command: ./gradlew connectedDebugAndroidTest
      - store_test_results:
          path: app/build/outputs/androidTest-results/connected/
      - store_test_results:
          path: core/build/outputs/androidTest-results/connected/
      - store_test_results:
          path: favorite/build/outputs/androidTest-results/connected/
      - store_artifacts:
          path: app/build/reports/androidTests/connected/
          destination: instrumented-test-reports/app
      - store_artifacts:
          path: core/build/reports/androidTests/connected/
          destination: instrumented-test-reports/core
      - store_artifacts:
          path: favorite/build/reports/androidTests/connected/
          destination: instrumented-test-reports/favorite
